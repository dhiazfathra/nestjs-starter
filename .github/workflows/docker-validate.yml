name: Docker Validation

on:
  push:
    branches: [ main, master ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - '.dockerignore'
      - '.github/workflows/docker-validate.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - '.dockerignore'
      - '.github/workflows/docker-validate.yml'

# Limit concurrent runs of the same workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: error

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: nestjs-starter:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  validate-docker-compose:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Validate docker-compose.yml
        run: |
          docker-compose config -q
          if [ $? -ne 0 ]; then
            echo "docker-compose.yml is not valid"
            exit 1
          fi

      - name: Create .env file for testing
        run: |
          cp .env.example .env
          # Make sure Redis host is set to 'redis' for Docker
          sed -i 's/REDIS_HOST=localhost/REDIS_HOST=redis/g' .env

      - name: Start services with docker-compose
        run: |
          docker-compose up -d
          # Give services time to start
          sleep 10

      - name: Check if services are running
        run: |
          if [ "$(docker-compose ps -q | wc -l)" -ne "3" ]; then
            echo "Not all services are running"
            docker-compose logs
            exit 1
          fi
          
          # Check app service
          if ! docker-compose ps app | grep -q "Up"; then
            echo "App service is not running"
            docker-compose logs app
            exit 1
          fi
          
          # Check postgres service
          if ! docker-compose ps postgres | grep -q "Up"; then
            echo "Postgres service is not running"
            docker-compose logs postgres
            exit 1
          fi
          
          # Check redis service
          if ! docker-compose ps redis | grep -q "Up"; then
            echo "Redis service is not running"
            docker-compose logs redis
            exit 1
          fi

      - name: Clean up
        run: docker-compose down -v
        if: always()
