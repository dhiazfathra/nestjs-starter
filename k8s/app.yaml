apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: nestjs-starter
data:
  NODE_ENV: production
  PORT: "3000"
  DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/nestjs?schema=public"
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  JAEGER_HOST: "jaeger"
  JAEGER_PORT: "6831"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nestjs-app
  namespace: nestjs-starter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nestjs-app
  template:
    metadata:
      labels:
        app: nestjs-app
    spec:
      containers:
        - name: nestjs-app
          image: nestjs-starter-app:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: app-config
          readinessProbe:
            httpGet:
              path: /api
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /api
              port: 3000
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: nestjs-app
  namespace: nestjs-starter
spec:
  selector:
    app: nestjs-app
  ports:
    - port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nestjs-app-ingress
  namespace: nestjs-starter
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: nestjs-starter.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nestjs-app
                port:
                  number: 3000
