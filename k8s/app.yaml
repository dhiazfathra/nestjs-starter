apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: nestjs-starter
data:
  NODE_ENV: 'production'
  PORT: '3000'
  DATABASE_URL: 'postgresql://postgres:postgres@postgres:5432/nestjs?schema=public'
  REDIS_HOST: 'redis'
  REDIS_PORT: '6379'
  JAEGER_HOST: 'jaeger'
  JAEGER_PORT: '6831'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nestjs-app
  namespace: nestjs-starter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nestjs-app
  template:
    metadata:
      labels:
        app: nestjs-app
    spec:
      # Add termination grace period to handle SIGTERM gracefully
      terminationGracePeriodSeconds: 60
      containers:
        - name: nestjs-app
          image: nestjs-starter-app:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: app-config
          # Add a startup probe to give the application more time to initialize
          startupProbe:
            httpGet:
              path: /api
              port: 3000
            failureThreshold: 30
            periodSeconds: 10
          # Adjust readiness probe to be more lenient
          readinessProbe:
            httpGet:
              path: /api
              port: 3000
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          # Adjust liveness probe to be more lenient
          livenessProbe:
            httpGet:
              path: /api
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          # Increase resource limits
          resources:
            requests:
              memory: '256Mi'
              cpu: '200m'
            limits:
              memory: '512Mi'
              cpu: '400m'
---
apiVersion: v1
kind: Service
metadata:
  name: nestjs-app
  namespace: nestjs-starter
spec:
  selector:
    app: nestjs-app
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30000
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nestjs-app-ingress
  namespace: nestjs-starter
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: nestjs-starter.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nestjs-app
                port:
                  number: 3000
